{"ast":null,"code":"import{useState,useEffect}from'react';const useFetch=url=>{const[data,setData]=useState(null);const[isPending,setIsPending]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const abortCont=new AbortController();setTimeout(()=>{fetch(url,{signal:abortCont.signal}).then(res=>{if(!res.ok){// error coming back from server\nthrow Error('could not fetch the data for that resource');}return res.json();}).then(data=>{setIsPending(false);setData(data);setError(null);}).catch(err=>{if(err.name==='AbortError'){console.log('fetch aborted');}else{// auto catches network / connection error\nsetIsPending(false);setError(err.message);}});},1000);// abort the fetch\nreturn()=>abortCont.abort();},[url]);return{data,isPending,error};};export default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["/root/Ethioflix/ethioflix/src/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal })\n      .then(res => {\n        if (!res.ok) { // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted')\n        } else {\n          // auto catches network / connection error\n          setIsPending(false);\n          setError(err.message);\n        }\n      })\n    }, 1000);\n\n    // abort the fetch\n    return () => abortCont.abort();\n  }, [url])\n\n  return { data, isPending, error };\n}\n \nexport default useFetch;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,KAAM,CAAAC,QAAQ,CAAIC,GAAG,EAAK,CACxB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGL,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACM,SAAS,CAAEC,YAAY,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,SAAS,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CAEvCC,UAAU,CAAC,IAAM,CACfC,KAAK,CAACV,GAAG,CAAE,CAAEW,MAAM,CAAEJ,SAAS,CAACI,MAAO,CAAC,CAAC,CACvCC,IAAI,CAACC,GAAG,EAAI,CACX,GAAI,CAACA,GAAG,CAACC,EAAE,CAAE,CAAE;AACb,KAAM,CAAAC,KAAK,CAAC,4CAA4C,CAAC,CAC3D,CACA,MAAO,CAAAF,GAAG,CAACG,IAAI,CAAC,CAAC,CACnB,CAAC,CAAC,CACDJ,IAAI,CAACX,IAAI,EAAI,CACZG,YAAY,CAAC,KAAK,CAAC,CACnBF,OAAO,CAACD,IAAI,CAAC,CACbK,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAC,CACDW,KAAK,CAACC,GAAG,EAAI,CACZ,GAAIA,GAAG,CAACC,IAAI,GAAK,YAAY,CAAE,CAC7BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAC9B,CAAC,IAAM,CACL;AACAjB,YAAY,CAAC,KAAK,CAAC,CACnBE,QAAQ,CAACY,GAAG,CAACI,OAAO,CAAC,CACvB,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,IAAI,CAAC,CAER;AACA,MAAO,IAAMf,SAAS,CAACgB,KAAK,CAAC,CAAC,CAChC,CAAC,CAAE,CAACvB,GAAG,CAAC,CAAC,CAET,MAAO,CAAEC,IAAI,CAAEE,SAAS,CAAEE,KAAM,CAAC,CACnC,CAAC,CAED,cAAe,CAAAN,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}